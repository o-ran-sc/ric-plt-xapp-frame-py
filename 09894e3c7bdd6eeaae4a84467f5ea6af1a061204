{
  "comments": [
    {
      "key": {
        "uuid": "8a16540a_e22c1300",
        "filename": "tests/fixtures/test_local.rt",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-04-03T12:21:25Z",
      "side": 1,
      "message": "I believe you mentioned in gerrit comments on the abandoned change set that this comment is not correct.  If that is so, would you please update or remove?",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 1
      },
      "revId": "09894e3c7bdd6eeaae4a84467f5ea6af1a061204",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d629c621_bf08b366",
        "filename": "tests/fixtures/test_local.rt",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1000074
      },
      "writtenOn": "2020-04-03T12:36:22Z",
      "side": 1,
      "message": "no this comment is still valid. if you use localhost, rts will not work",
      "parentUuid": "8a16540a_e22c1300",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 1
      },
      "revId": "09894e3c7bdd6eeaae4a84467f5ea6af1a061204",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26d629fb_99a3d6fc",
        "filename": "tests/test_xapps.py",
        "patchSetId": 4
      },
      "lineNbr": 79,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-04-03T12:21:25Z",
      "side": 1,
      "message": "How is this approach different from the previous test case?  please add a few words of guidance documenting what you learned",
      "range": {
        "startLine": 79,
        "startChar": 4,
        "endLine": 79,
        "endChar": 24
      },
      "revId": "09894e3c7bdd6eeaae4a84467f5ea6af1a061204",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3841fc66_cbbce270",
        "filename": "tests/test_xapps.py",
        "patchSetId": 4
      },
      "lineNbr": 79,
      "author": {
        "id": 1000074
      },
      "writtenOn": "2020-04-03T12:35:46Z",
      "side": 1,
      "message": "i am not going to comment on something that is no longer in the code. This code is a valid test. \n\nbut for your records, this test uses a second rmr xapp to test the first one",
      "parentUuid": "26d629fb_99a3d6fc",
      "range": {
        "startLine": 79,
        "startChar": 4,
        "endLine": 79,
        "endChar": 24
      },
      "revId": "09894e3c7bdd6eeaae4a84467f5ea6af1a061204",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2994ca0b_3454bb0b",
        "filename": "tests/test_xapps.py",
        "patchSetId": 4
      },
      "lineNbr": 79,
      "author": {
        "id": 1000037
      },
      "writtenOn": "2020-04-03T12:35:48Z",
      "side": 1,
      "message": "My \"guess\" is that the rmr.send() call to send the request is in the post_init; was it that way before.  That\u0027s the bit that seems new to me and that is what I think has addressed the timing issue.  If so, I can live with this.",
      "parentUuid": "26d629fb_99a3d6fc",
      "range": {
        "startLine": 79,
        "startChar": 4,
        "endLine": 79,
        "endChar": 24
      },
      "revId": "09894e3c7bdd6eeaae4a84467f5ea6af1a061204",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f604c2ee_4ea9b891",
        "filename": "tests/test_xapps.py",
        "patchSetId": 4
      },
      "lineNbr": 79,
      "author": {
        "id": 1000074
      },
      "writtenOn": "2020-04-03T12:39:31Z",
      "side": 1,
      "message": "the failed test used the General Xapp. This test launches a third xapp of an rmr variety; totally different kind of test.\n\nThere is something wrong with general xapp timing on these VMs however that is **not** the focus of this healthcheck change. As I said yesterday, the bug was in the test code, not the healthcheck code, which is identical here.",
      "parentUuid": "2994ca0b_3454bb0b",
      "range": {
        "startLine": 79,
        "startChar": 4,
        "endLine": 79,
        "endChar": 24
      },
      "revId": "09894e3c7bdd6eeaae4a84467f5ea6af1a061204",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76f7ed47_ce7e2381",
        "filename": "tests/test_xapps.py",
        "patchSetId": 4
      },
      "lineNbr": 80,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-04-03T12:21:25Z",
      "side": 1,
      "message": "a supervillan?",
      "range": {
        "startLine": 80,
        "startChar": 6,
        "endLine": 80,
        "endChar": 12
      },
      "revId": "09894e3c7bdd6eeaae4a84467f5ea6af1a061204",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    }
  ]
}