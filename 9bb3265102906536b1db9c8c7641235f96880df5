{
  "comments": [
    {
      "key": {
        "uuid": "8dc75fe8_dacfbcc5",
        "filename": "ricxappframe/xapp_sdl.py",
        "patchSetId": 7
      },
      "lineNbr": 89,
      "author": {
        "id": 1000074
      },
      "writtenOn": "2020-05-12T22:47:20Z",
      "side": 1,
      "message": "this doesn\u0027t seem super valuable to me, as the python sdl framework will do this. the harm in doing this is if the python sdl framework is extended to accept other value types which they were discussing. I think you should just let the sdl framework reject invalid values.",
      "revId": "9bb3265102906536b1db9c8c7641235f96880df5",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20496535_8d9bad66",
        "filename": "ricxappframe/xapp_sdl.py",
        "patchSetId": 7
      },
      "lineNbr": 89,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-05-12T22:58:14Z",
      "side": 1,
      "message": "Right. But much of the usage right now sets use_fake_sdl\u003dTrue, and this code will reject a non-bytes value in that case.",
      "parentUuid": "8dc75fe8_dacfbcc5",
      "revId": "9bb3265102906536b1db9c8c7641235f96880df5",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "962722b9_dcdf4e4f",
        "filename": "tests/test_sdl.py",
        "patchSetId": 7
      },
      "lineNbr": 56,
      "author": {
        "id": 1000074
      },
      "writtenOn": "2020-05-12T22:48:32Z",
      "side": 1,
      "message": "no\n\nuse pytest.raises(ValueError) instead of this construct\n\nhttps://stackoverflow.com/questions/23337471/how-to-properly-assert-that-an-exception-gets-raised-in-pytest",
      "revId": "9bb3265102906536b1db9c8c7641235f96880df5",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "974920df_7d03bc8f",
        "filename": "tests/test_sdl.py",
        "patchSetId": 7
      },
      "lineNbr": 56,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2020-05-12T22:58:14Z",
      "side": 1,
      "message": "Thanks for the pointer",
      "parentUuid": "962722b9_dcdf4e4f",
      "revId": "9bb3265102906536b1db9c8c7641235f96880df5",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": false
    }
  ]
}